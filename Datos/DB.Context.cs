//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class carwashEntities : DbContext
    {
        public carwashEntities()
            : base("name=carwashEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<asistencia> asistencia { get; set; }
        public virtual DbSet<categoria> categoria { get; set; }
        public virtual DbSet<persona> persona { get; set; }
        public virtual DbSet<rol> rol { get; set; }
        public virtual DbSet<servicio> servicio { get; set; }
        public virtual DbSet<servicio_adicional> servicio_adicional { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<tarifa_adicional> tarifa_adicional { get; set; }
        public virtual DbSet<tarifa_lavado> tarifa_lavado { get; set; }
        public virtual DbSet<trabajador> trabajador { get; set; }
        public virtual DbSet<trabajador_egreso> trabajador_egreso { get; set; }
        public virtual DbSet<usuario_login> usuario_login { get; set; }
        public virtual DbSet<vehiculo> vehiculo { get; set; }
        public virtual DbSet<traerAdicionales> traerAdicionales { get; set; }
        public virtual DbSet<traerLavado> traerLavado { get; set; }
    
        public virtual int actAcc(Nullable<short> xId_User, string xUsuario, string xPassword)
        {
            var xId_UserParameter = xId_User.HasValue ?
                new ObjectParameter("xId_User", xId_User) :
                new ObjectParameter("xId_User", typeof(short));
    
            var xUsuarioParameter = xUsuario != null ?
                new ObjectParameter("xUsuario", xUsuario) :
                new ObjectParameter("xUsuario", typeof(string));
    
            var xPasswordParameter = xPassword != null ?
                new ObjectParameter("xPassword", xPassword) :
                new ObjectParameter("xPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("actAcc", xId_UserParameter, xUsuarioParameter, xPasswordParameter);
        }
    
        public virtual ObjectResult<buscarEgreso_Result> buscarEgreso(string xNomApe, string xDesc, Nullable<System.DateTime> xFecIni, Nullable<System.DateTime> xFecFin, Nullable<byte> xOpc)
        {
            var xNomApeParameter = xNomApe != null ?
                new ObjectParameter("xNomApe", xNomApe) :
                new ObjectParameter("xNomApe", typeof(string));
    
            var xDescParameter = xDesc != null ?
                new ObjectParameter("xDesc", xDesc) :
                new ObjectParameter("xDesc", typeof(string));
    
            var xFecIniParameter = xFecIni.HasValue ?
                new ObjectParameter("xFecIni", xFecIni) :
                new ObjectParameter("xFecIni", typeof(System.DateTime));
    
            var xFecFinParameter = xFecFin.HasValue ?
                new ObjectParameter("xFecFin", xFecFin) :
                new ObjectParameter("xFecFin", typeof(System.DateTime));
    
            var xOpcParameter = xOpc.HasValue ?
                new ObjectParameter("xOpc", xOpc) :
                new ObjectParameter("xOpc", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<buscarEgreso_Result>("buscarEgreso", xNomApeParameter, xDescParameter, xFecIniParameter, xFecFinParameter, xOpcParameter);
        }
    
        public virtual ObjectResult<buscarVehiculo_Result> buscarVehiculo(string xPlaca, string xCate)
        {
            var xPlacaParameter = xPlaca != null ?
                new ObjectParameter("xPlaca", xPlaca) :
                new ObjectParameter("xPlaca", typeof(string));
    
            var xCateParameter = xCate != null ?
                new ObjectParameter("xCate", xCate) :
                new ObjectParameter("xCate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<buscarVehiculo_Result>("buscarVehiculo", xPlacaParameter, xCateParameter);
        }
    
        public virtual ObjectResult<busqAsistencia_Result> busqAsistencia(string xPersonal, Nullable<System.DateTime> xFecIni, Nullable<System.DateTime> xFecFin)
        {
            var xPersonalParameter = xPersonal != null ?
                new ObjectParameter("xPersonal", xPersonal) :
                new ObjectParameter("xPersonal", typeof(string));
    
            var xFecIniParameter = xFecIni.HasValue ?
                new ObjectParameter("xFecIni", xFecIni) :
                new ObjectParameter("xFecIni", typeof(System.DateTime));
    
            var xFecFinParameter = xFecFin.HasValue ?
                new ObjectParameter("xFecFin", xFecFin) :
                new ObjectParameter("xFecFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<busqAsistencia_Result>("busqAsistencia", xPersonalParameter, xFecIniParameter, xFecFinParameter);
        }
    
        public virtual ObjectResult<busqServicio_Result> busqServicio(string xPlaca, Nullable<byte> xCategoria, Nullable<System.DateTime> xFecIni, Nullable<System.DateTime> xFecFin, string xLavador, Nullable<byte> xOpc, Nullable<byte> xOpcDscto, Nullable<bool> xEstPago)
        {
            var xPlacaParameter = xPlaca != null ?
                new ObjectParameter("xPlaca", xPlaca) :
                new ObjectParameter("xPlaca", typeof(string));
    
            var xCategoriaParameter = xCategoria.HasValue ?
                new ObjectParameter("xCategoria", xCategoria) :
                new ObjectParameter("xCategoria", typeof(byte));
    
            var xFecIniParameter = xFecIni.HasValue ?
                new ObjectParameter("xFecIni", xFecIni) :
                new ObjectParameter("xFecIni", typeof(System.DateTime));
    
            var xFecFinParameter = xFecFin.HasValue ?
                new ObjectParameter("xFecFin", xFecFin) :
                new ObjectParameter("xFecFin", typeof(System.DateTime));
    
            var xLavadorParameter = xLavador != null ?
                new ObjectParameter("xLavador", xLavador) :
                new ObjectParameter("xLavador", typeof(string));
    
            var xOpcParameter = xOpc.HasValue ?
                new ObjectParameter("xOpc", xOpc) :
                new ObjectParameter("xOpc", typeof(byte));
    
            var xOpcDsctoParameter = xOpcDscto.HasValue ?
                new ObjectParameter("xOpcDscto", xOpcDscto) :
                new ObjectParameter("xOpcDscto", typeof(byte));
    
            var xEstPagoParameter = xEstPago.HasValue ?
                new ObjectParameter("xEstPago", xEstPago) :
                new ObjectParameter("xEstPago", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<busqServicio_Result>("busqServicio", xPlacaParameter, xCategoriaParameter, xFecIniParameter, xFecFinParameter, xLavadorParameter, xOpcParameter, xOpcDsctoParameter, xEstPagoParameter);
        }
    
        public virtual ObjectResult<busqTrab_Result> busqTrab(string xNomApe, string xOcup, string xTelef, string xCorreo, Nullable<byte> xOpc, Nullable<bool> xEst)
        {
            var xNomApeParameter = xNomApe != null ?
                new ObjectParameter("xNomApe", xNomApe) :
                new ObjectParameter("xNomApe", typeof(string));
    
            var xOcupParameter = xOcup != null ?
                new ObjectParameter("xOcup", xOcup) :
                new ObjectParameter("xOcup", typeof(string));
    
            var xTelefParameter = xTelef != null ?
                new ObjectParameter("xTelef", xTelef) :
                new ObjectParameter("xTelef", typeof(string));
    
            var xCorreoParameter = xCorreo != null ?
                new ObjectParameter("xCorreo", xCorreo) :
                new ObjectParameter("xCorreo", typeof(string));
    
            var xOpcParameter = xOpc.HasValue ?
                new ObjectParameter("xOpc", xOpc) :
                new ObjectParameter("xOpc", typeof(byte));
    
            var xEstParameter = xEst.HasValue ?
                new ObjectParameter("xEst", xEst) :
                new ObjectParameter("xEst", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<busqTrab_Result>("busqTrab", xNomApeParameter, xOcupParameter, xTelefParameter, xCorreoParameter, xOpcParameter, xEstParameter);
        }
    
        public virtual ObjectResult<cajaEgresos_Result> cajaEgresos(Nullable<System.DateTime> xFecIni, Nullable<System.DateTime> xFecFin)
        {
            var xFecIniParameter = xFecIni.HasValue ?
                new ObjectParameter("xFecIni", xFecIni) :
                new ObjectParameter("xFecIni", typeof(System.DateTime));
    
            var xFecFinParameter = xFecFin.HasValue ?
                new ObjectParameter("xFecFin", xFecFin) :
                new ObjectParameter("xFecFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cajaEgresos_Result>("cajaEgresos", xFecIniParameter, xFecFinParameter);
        }
    
        public virtual ObjectResult<cajaIngresos_Result> cajaIngresos(Nullable<System.DateTime> xFecIni, Nullable<System.DateTime> xFecFin)
        {
            var xFecIniParameter = xFecIni.HasValue ?
                new ObjectParameter("xFecIni", xFecIni) :
                new ObjectParameter("xFecIni", typeof(System.DateTime));
    
            var xFecFinParameter = xFecFin.HasValue ?
                new ObjectParameter("xFecFin", xFecFin) :
                new ObjectParameter("xFecFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<cajaIngresos_Result>("cajaIngresos", xFecIniParameter, xFecFinParameter);
        }
    
        public virtual ObjectResult<categoriasMasSolicitadas_Result> categoriasMasSolicitadas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<categoriasMasSolicitadas_Result>("categoriasMasSolicitadas");
        }
    
        public virtual ObjectResult<comprobarClave_Result> comprobarClave(Nullable<short> xId_User, string xPassword)
        {
            var xId_UserParameter = xId_User.HasValue ?
                new ObjectParameter("xId_User", xId_User) :
                new ObjectParameter("xId_User", typeof(short));
    
            var xPasswordParameter = xPassword != null ?
                new ObjectParameter("xPassword", xPassword) :
                new ObjectParameter("xPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<comprobarClave_Result>("comprobarClave", xId_UserParameter, xPasswordParameter);
        }
    
        public virtual int datosInterfazPrincipal(ObjectParameter xCantDeud, ObjectParameter xCantServ, ObjectParameter xGastos, ObjectParameter xDeudas, ObjectParameter xVentas, ObjectParameter xCaja)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("datosInterfazPrincipal", xCantDeud, xCantServ, xGastos, xDeudas, xVentas, xCaja);
        }
    
        public virtual ObjectResult<iniciarSesion_Result> iniciarSesion(string xUsuario, string xPassword)
        {
            var xUsuarioParameter = xUsuario != null ?
                new ObjectParameter("xUsuario", xUsuario) :
                new ObjectParameter("xUsuario", typeof(string));
    
            var xPasswordParameter = xPassword != null ?
                new ObjectParameter("xPassword", xPassword) :
                new ObjectParameter("xPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<iniciarSesion_Result>("iniciarSesion", xUsuarioParameter, xPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> montoServicios(Nullable<short> xIdTrab, Nullable<System.DateTime> xFecIni, Nullable<System.DateTime> xFecFin)
        {
            var xIdTrabParameter = xIdTrab.HasValue ?
                new ObjectParameter("xIdTrab", xIdTrab) :
                new ObjectParameter("xIdTrab", typeof(short));
    
            var xFecIniParameter = xFecIni.HasValue ?
                new ObjectParameter("xFecIni", xFecIni) :
                new ObjectParameter("xFecIni", typeof(System.DateTime));
    
            var xFecFinParameter = xFecFin.HasValue ?
                new ObjectParameter("xFecFin", xFecFin) :
                new ObjectParameter("xFecFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("montoServicios", xIdTrabParameter, xFecIniParameter, xFecFinParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> saldoAnt(Nullable<System.DateTime> xFecPag)
        {
            var xFecPagParameter = xFecPag.HasValue ?
                new ObjectParameter("xFecPag", xFecPag) :
                new ObjectParameter("xFecPag", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("saldoAnt", xFecPagParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<topVehiculosServicios_Result> topVehiculosServicios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<topVehiculosServicios_Result>("topVehiculosServicios");
        }
    
        public virtual ObjectResult<traerDatosPerfil_Result> traerDatosPerfil(Nullable<short> xId_Trab)
        {
            var xId_TrabParameter = xId_Trab.HasValue ?
                new ObjectParameter("xId_Trab", xId_Trab) :
                new ObjectParameter("xId_Trab", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<traerDatosPerfil_Result>("traerDatosPerfil", xId_TrabParameter);
        }
    
        public virtual ObjectResult<string> traerNombreApellido(Nullable<short> xId_Trab)
        {
            var xId_TrabParameter = xId_Trab.HasValue ?
                new ObjectParameter("xId_Trab", xId_Trab) :
                new ObjectParameter("xId_Trab", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("traerNombreApellido", xId_TrabParameter);
        }
    
        public virtual ObjectResult<ventasGrafica_Result> ventasGrafica(Nullable<System.DateTime> xFecIni, Nullable<System.DateTime> xFecFin)
        {
            var xFecIniParameter = xFecIni.HasValue ?
                new ObjectParameter("xFecIni", xFecIni) :
                new ObjectParameter("xFecIni", typeof(System.DateTime));
    
            var xFecFinParameter = xFecFin.HasValue ?
                new ObjectParameter("xFecFin", xFecFin) :
                new ObjectParameter("xFecFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ventasGrafica_Result>("ventasGrafica", xFecIniParameter, xFecFinParameter);
        }
    }
}
